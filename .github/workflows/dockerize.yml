name: Dockerize Bot

on:
  push:
    branches: [ "main"]

jobs:

    deploy:
      runs-on: ubuntu-latest

      steps:
        - name: Command to deploy
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.SSH_USER }}
            port: ${{ secrets.SSH_PORT }}
            password: ${{ secrets.SSH_PASSWORD }}
            script: |
              # pull repository
              cd /home/${{ secrets.SSH_USER }}/bolice/ && \
              git pull origin main --rebase
              
              # creating env file
              cd ./app/ && \
              rm -f .env && \
              touch .env && \
              chmod 777 .env && \
              echo BUILD_TYPE=PROD >> .env && \
              echo TELEGRAM_API_ID=${{ secrets.TELEGRAM_API_ID }} >> .env && \
              echo TELEGRAM_API_HASH=${{ secrets.TELEGRAM_API_HASH }} >> .env && \
              echo TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} >> .env && \
              echo D_DISK_CHAT_ID=${{ secrets.D_DISK_CHAT_ID }} >> .env && \
              echo MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }} >> .env && \
              echo MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }} >> .env && \
              echo MONGO_HOST=mongodb >> .env

              # deploy on docker
              nohup sh restart.sh

    send_message:
      runs-on: ubuntu-latest
      needs: deploy
    
      steps:
        - name: Send message
          uses: appleboy/telegram-action@master
          with:
            to: ${{ secrets.TELEGRAM_DEV_CHAT_ID }}
            token: ${{ secrets.TELEGRAM_DEV_BOT_TOKEN }}
            message: Workflow "${{ github.workflow }}" в ${{ github.repository }} успешно выполнен!
